LW- MLOps, [11.06.20 15:00]
❗️TASK-1 ❗️

JOB#1
If Developer push to dev branch then Jenkins will fetch from dev and deploy on dev-docker environment.

JOB#2
If Developer push to master branch then Jenkins will fetch from master and deploy on master-docke environment.
both dev-docker and master-docker environment are on different docker containers.

JOB#3
Manually the QA team will check (test) for the website running in dev-docker environment. If it is running fine then Jenkins will merge the dev branch to master branch and trigger #job 2

📌Task-1 Submission Link: https://forms.gle/grAJrEGWn2edBGpUA

LW- MLOps, [11.06.20 15:00]
❗️TASK-2❗️

1. Create container image that’s has Jenkins installed  using dockerfile 

2. When we launch this image, it should automatically starts Jenkins service in the container.

3. Create a job chain of job1, job2, job3 and  job4 using build pipeline plugin in Jenkins 

4.  Job1 : Pull  the Github repo automatically when some developers push repo to Github.

5.  Job2 : By looking at the code or program file, Jenkins should automatically start the respective language interpreter install image container to deploy code ( eg. If code is of  PHP, then Jenkins should start the container that has PHP already installed ).

6. Job3 : Test your app if it  is working or not.

7. Job4 : if app is not working , then send email to developer with error messages.

8. Create One extra job job5 for monitor : If container where app is running. fails due to any reson then this job should automatically start the container again.

📌 Task-2 Link: https://forms.gle/nT5fLB2uXbokbbNw7

LW- MLOps, [11.06.20 15:01]
❗️Task-3❗️

1. Create container image that’s has Python3 and Keras or numpy  installed  using dockerfile 

2. When we launch this image, it should automatically starts train the model in the container.

3. Create a job chain of job1, job2, job3, job4 and job5 using build pipeline plugin in Jenkins 

4.  Job1 : Pull  the Github repo automatically when some developers push repo to Github.

5.  Job2 : By looking at the code or program file, Jenkins should automatically start the respective machine learning software installed interpreter install image container to deploy code  and start training( eg. If code uses CNN, then Jenkins should start the container that has already installed all the softwares required for the cnn processing).

6. Job3 : Train your model and predict accuracy or metrics.

7. Job4 : if metrics accuracy is less than 80%  , then tweak the machine learning model architecture.

8. Job5: Retrain the model or notify that the best model is being created

9. Create One extra job job6 for monitor : If container where app is running. fails due to any reason then this job should automatically start the container again from where the last trained model left

📌 Task-3 Link: https://forms.gle/VWxMmWn2K5s2K13DA

LW- MLOps, [11.06.20 15:02]
❗️Task-4❗️

Problem Statement: Create a project using transfer learning solving various problems like Face Recognition, Image Classification, using existing Deep Learning models like VGG16, VGG19, ResNet, etc.

📌 Task-4 Link: https://forms.gle/T2Hwjg3YMu6EV32s9

LW- MLOps, [11.06.20 15:03]
❗️ Optional Task 5 - But Recommended by Vimal Sir❗️

Create a automated system which will be useful for a server in  terms of following featues:-

1. This system will  keep log of the information about the clients hit or request to the server for example we can get log file of a webserver at location /var/log/httpd/

2. This log data of clients will be used for finding  the unusual pattern of a client request for example if a client is sending request repeatedly. for this purpose we can use here clustering to make clusters of different patterns of client request and to identify which cluster of client requests can cause some security and performance issue in the server

3. If any kind of unusual pattern we got then we can use jenkins to perform certain task for example it can run some command to block that ip which is causing this trouble.

📌 Task-5 Link: https://forms.gle/izwSJEZ9wEucSHjG7